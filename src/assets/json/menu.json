{
    "funcionalidad":[
        {
            "codigo":"1.1",
            "item":"Adecuación",
            "descripcion":"La capacidad del software para proveer un adecuado conjunto de funciones para las tareas y objetivos especificados por el usuario. Ejemplos de adecuación son la composición orientada a tareas de funciones a partir de sub funciones que las constituyen, y las capacidades de las tablas.",
            "valor":"adequacy",
            "observacion":"adequacyObservation"
        },
        {
            "codigo":"1.2",
            "item":"Exactitud",
            "descripcion":"La capacidad del software para proveer los resultados o efectos acordados con un grado necesario de precisión",
            "valor":"accuracy",
            "observacion":"accuracyObservation"
        },
        {
            "codigo":"1.3",
            "item":"Interoperabilidad",
            "descripcion":"La capacidad del software de interactuar con uno o más sistemas especificados. La interoperabilidad se utiliza en lugar de compatibilidad para evitar una posible ambigüedad con la reemplazabilidad.",
            "valor":"interoperability",
            "observacion":"interoperabilityObservation"
        },
        {
            "codigo":"1.4",
            "item":"Seguridad",
            "descripcion":"La capacidad del software para proteger la información y los datos de modo que las personas o los sistemas no autorizados no puedan leerlos o modificarlos, y a las personas o sistemas autorizados no se les niegue el acceso a ellos. La seguridad en un sentido amplio se define como característica de la calidad en uso, pues no se relaciona con el software solamente, sino con todo un sistema",
            "valor":"security",
            "observacion":"securityObservation"
        },
        {
            "codigo":"1.5",
            "item":"Conformidad de la funcionalidad",
            "descripcion":"La capacidad del software de adherirse a los estándares, convenciones o regulaciones legales y prescripciones similares referentes a la funcionalidad.",
            "valor":"functionalityConfort",
            "observacion":"functionalityConfortObservation"
        }
        
    ],
    "fiabilidad":[
        {
            "codigo":"2.1",
            "item":"Madurez",
            "descripcion":"La capacidad del software para evitar fallas como resultado de errores en el software.",
            "valor":"maturity",
            "observacion":"maturityObservation"
        },
        {
            "codigo":"2.2",
            "item":"Tolerancia a errores",
            "descripcion":"La capacidad del producto de software para mantener un nivel especificado de funcionamiento en caso de errores del software o de incumplimiento de su interfaz especificada. El nivel especificado de funcionamiento puede incluir la falta de capacidad de seguridad.",
            "valor":"errrorTolerance",
            "observacion":"errrorToleranceObservation"
        },
        {
            "codigo":"2.3",
            "item":"Recuperabilidad",
            "descripcion":"La capacidad del software para restablecer un nivel especificado de funcionamiento y recuperar los datos afectados directamente en el caso de una falla. Después de una falla, un software a veces estará no disponible por cierto período del tiempo, intervalo en el cual se evaluará su recuperabilidad.",
            "valor":"recoverability",
            "observacion":"recoverabilityObservation"
        },
        {
            "codigo":"2.4",
            "item":"Conformidad de la fiabilidad",
            "descripcion":"La capacidad del software para adherirse a las normas, convenciones o regulaciones relativas a la fiabilidad.",
            "valor":"reliability",
            "observacion":"reliabilityObservation"
        }
    ],
    "usabilidad":[
        {
            "codigo":"3.1",
            "item":"Entendimiento",
            "descripcion":"La capacidad del software para permitir al usuario entender si el software es adecuado, y cómo puede ser utilizado para las tareas y las condiciones particulares de la aplicación. Esto dependerá de la documentación y de las impresiones iniciales dadas por el software.",
            "valor":"understanding",
            "observacion":"understandingObservation"
        },
        {
            "codigo":"3.2",
            "item":"Aprendizaje",
            "descripcion":"La capacidad del software para permitir al usuario aprender su aplicación. Un aspecto importante a considerar aquí es la documentación del software.",
            "valor":"learning",
            "observacion":"learningObservation"
        },
        {
            "codigo":"3.3",
            "item":"Operabilidad",
            "descripcion":"La capacidad del software para permitir al usuario operarlo y controlarlo. Los aspectos de propiedad, de cambio, de adaptabilidad y de instalación pueden afectar la operabilidad.",
            "valor":"operability",
            "observacion":"operabilityObservation"
        },
        {
            "codigo":"3.4",
            "item":"Atracción",
            "descripcion":"La capacidad del software de ser atractivo al usuario. Esto se refiere a las cualidades del software para hacer el software más atractivo al usuario, tal como el uso del color y la naturaleza del diseño gráfico",
            "valor":"attraction",
            "observacion":"attractionObservation"
        },
        {
            "codigo":"3.5",
            "item":"Conformidad de uso",
            "descripcion":"La capacidad del software para adherirse a los estándares, convenciones, guías de estilo o regulaciones relacionadas a su usabilidad.",
            "valor":"conformity",
            "observacion":"conformityObservation"
        }

    ],
    "eficiencia":[
        {
            "codigo":"4.1",
            "item":"Comportamiento de tiempos",
            "descripcion":"La capacidad del software para proveer tiempos adecuados de respuesta y procesamiento, y ratios de rendimiento cuando realiza su función bajo las condiciones establecidas",
            "valor":"behaviorTime",
            "observacion":"behaviorTimeObservation"
        },
        {
            "codigo":"4.2",
            "item":"Utilización de recursos",
            "descripcion":"La capacidad del software para utilizar cantidades y tipos adecuados de recursos cuando este funciona bajo las condiciones establecidas. Los recursos humanos están incluidos dentro del concepto de productividad.",
            "valor":"useResource",
            "observacion":"useResourceObservation"
        },
        {
            "codigo":"4.3",
            "item":"Conformidad de eficiencia",
            "descripcion":"La capacidad del producto de software para adherirse a estándares o convenciones relacionados a la eficiencia.",
            "valor":"efficiencyCompliance",
            "observacion":"efficiencyComplianceObservation"
        }
    ],

    "mantenimiento":[
        {
            "codigo":"5.1",
            "item":"Capacidad de ser analizado",
            "descripcion":"La capacidad del software para atenerse a diagnósticos de deficiencias o causas de fallas en el software o la identificación de las partes a ser modificadas",
            "valor":"reviewed",
            "observacion":"reviewedObservation"
        },
        {
            "codigo":"5.2",
            "item":"Cambiabilidad",
            "descripcion":"La capacidad del software para permitir que una determinada modificación sea implementada. Implementación incluye codificación, diseño y documentación de cambios. Si el software va a ser modificado por el usuario final, la cambiabilidad podría afectar la operabilidad.",
            "valor":"changeability",
            "observacion":"changeabilityObservation"
        },
        {
            "codigo":"5.3",
            "item":"Estabilidad",
            "descripcion":"La capacidad del software para evitar efectos inesperados debido a modificaciones del software.",
            "valor":"stability",
            "observacion":"stabilityObservation"
        },
        {
            "codigo":"5.4",
            "item":"Facilidad de prueba",
            "descripcion":"La capacidad del software para permitir que las modificaciones sean validadas",
            "valor":"testingEasy",
            "observacion":"testingEasyObservation"
        },
        {
            "codigo":"5.5",
            "item":"Conformidad de facilidad de mantenimiento",
            "descripcion":"La capacidad del software para adherirse a estándares o convenciones relativas a la facilidad de mantenimiento.",
            "valor":"maintenanceCompliance",
            "observacion":"maintenanceComplianceeObservation"
        }
    ],

    "portabilidad":[
        {
            "codigo":"6.1",
            "item":"Adaptabilidad",
            "descripcion":"La capacidad del software para ser adaptado a diferentes entornos especificados sin aplicar acciones o medios diferentes de los previstos para el propósito del software considerado. Adaptabilidad incluye la escalabilidad de capacidad interna (Ejemplo: Campos en pantalla, tablas, volúmenes de transacciones, formatos de reporte, etc.). Si el software va a ser adaptado por el usuario final, la adaptabilidad corresponde a la conveniencia de la individualización, y podría afectar la operabilidad.",
            "valor":"adaptability",
            "observacion":"adaptabilityObservation"
        },
        {
            "codigo":"6.2",
            "item":"Facilidad de instalación",
            "descripcion":"La capacidad del software para ser instalado en un ambiente especificado. Si el software va a ser instalado por el usuario final, puede afectar la propiedad y operatividad resultantes.",
            "valor":"installationEasy",
            "observacion":"installationEasyObservation"
        },
        {
            "codigo":"6.3",
            "item":"Coexistencia",
            "descripcion":"La capacidad del software para coexistir con otros productos de software independientes dentro de un mismo entorno, compartiendo recursos comunes.",
            "valor":"coexistence",
            "observacion":"coexistenceObservation"
        },
        {
            "codigo":"6.4",
            "item":"Reemplazabilidad",
            "descripcion":"La capacidad del software para ser utilizado en lugar de otro software, para el mismo propósito y en el mismo entorno. Por ejemplo, la reemplazabilidad de una nueva versión de un software es importante para el usuario cuando dicho software es actualizado (actualizaciones, upgrades).",
            "valor":"replaceability",
            "observacion":"replaceabilityObservation"
        },
        {
            "codigo":"6.5",
            "item":"Conformidad de portabilidad",
            "descripcion":"La capacidad del software para adherirse a estándares o convenciones relacionados a la portabilidad",
            "valor":"portability",
            "observacion":"portabilityObservation"
        }
    ],
    "calidad":[
        {
            "codigo":"7.1",
            "item":"Eficacia",
            "descripcion":"La capacidad del software para permitir a los usuarios lograr las metas especificadas con exactitud e integridad, en un contexto especificado de uso.",
            "valor":"efficiency",
            "observacion":"efficiencyObservation"
        },
        {
            "codigo":"7.2",
            "item":"Productividad",
            "descripcion":"La capacidad del software para permitir a los usuarios emplear cantidades apropiadas de recursos, en relación a la eficacia lograda en un contexto especificado de uso. Los recursos relevantes pueden incluir: tiempo para completar la tarea, esfuerzo del usuario, materiales o costo financiero.",
            "valor":"productivity",
            "observacion":"productivityObservation"
        },
        {
            "codigo":"7.3",
            "item":"Seguridad",
            "descripcion":"La capacidad del software para lograr niveles aceptables de riesgo de daño a las personas, institución, software, propiedad (licencias, contratos de uso de software) o entorno, en un contexto especificado de uso. Los riesgos son normalmente el resultado de deficiencias en la funcionalidad (incluyendo seguridad), fiabilidad, usabilidad o facilidad de mantenimiento.",
            "valor":"security",
            "observacion":"securityObservation"
        },
        {
            "codigo":"7.4",
            "item":"Satisfacción",
            "descripcion":"La capacidad del software para satisfacer a los usuarios en un contexto especificado de uso. La satisfacción es la respuesta del usuario a la interacción con el producto, e incluye las actitudes hacia el uso del producto.",
            "valor":"satisfaction",
            "observacion":"satisfactionObservation"
        },
        {
            "codigo":"7.5",
            "item":"Mercadeo",
            "descripcion":"El tiempo que tiene el software o proveedor en el caso del que producto sea a la medida en el mercado. Menor a un año=0, de 1 a 2 años =1, de 2 a 3 años=2 y de mas de 3 años=3",
            "valor":"marketing",
            "observacion":"marketingObservation"
        },
        {
            "codigo":"7.6",
            "item":"Estandarizacion",
            "descripcion":"Numero de Instalaciones en diferentes empresas locales, si es un producto a la medida Numero de Softwares instalados por el proveedor. Ninguno=0, de 1 a 3=1 de 4 a 6=2 , mas 6 =3",
            "valor":"standardization",
            "observacion":"standardizationObservation"
        }
    ]


}